module traffic (/*AUTOARG*/
   // Outputs
   db,
   // Inputs
   clk
   );

   input clk;
   output [9:0] db;
   reg [9:0] 	db;
   reg [5:0] 	counter; // every mode can have duration at most 32 secs
   reg [24:0] 	clks;
   reg [21:0] 	clkfast;
   reg [3:0] 	mode;

   always @ (posedge clk) begin
      clks <= clks + 1'b1;
      clkfast <= clkfast + 1'b1;
   end

   always @(posedge clks[24]) begin
      if (counter != 0) begin
	 counter <= counter - 1'b1;
      end else begin
	 mode <= mode + 1'b1;
	 case(mode)
	   4'd0: counter <= 6'd1;
	   4'd1: counter <= 6'd2;
	   4'd2: counter <= 6'd1;
	   4'd3: counter <= 6'd2;
	   4'd4: counter <= 6'd1;
	   4'd5: counter <= 6'd2;
	   4'd6: counter <= 6'd1;
	   4'd7: counter <= 6'd2;
	   4'd8: counter <= 6'd1;
	   4'd9: counter <= 6'd2; 
	 endcase
      end // always @ (posedge clks[24])
      //mode <= mode +1'b1;
   end

   always @(posedge clkfast[22]) begin 
      case(mode)
	4'd0 : db <= 10'b100000000;
	4'd1 :
	  if (db == 10'b0100000001) begin
	     db <= 10'b0000000001;
	  end else begin
	     db <= 10'b0100000001;
	  end
	4'd2: db = 10'b0010000000;
	4'd3: db = 10'b0001000000;
	4'd4: db = 10'b0000100000;
	4'd5: db = 10'b0000010000;
	4'd6: db = 10'b0000001000;
	4'd7: db = 10'b0000000100;
	4'd8: db = 10'b0000000010;
	4'd9: db = 10'b0000000001;      endcase 
   end

endmodule // traffic
