SYSTEM cpueffect
{
   System_Wizard_Version = "9.00";
   System_Wizard_Build = "235";
   Builder_Application = "sopc_builder_ca";
   WIZARD_SCRIPT_ARGUMENTS 
   {
      hdl_language = "verilog";
      device_family = "CYCLONEII";
      device_family_id = "CYCLONEII";
      generate_sdk = "0";
      do_build_sim = "0";
      hardcopy_compatible = "0";
      CLOCKS 
      {
         CLOCK clk_50
         {
            frequency = "50000000";
            source = "External";
            Is_Clock_Source = "0";
            display_name = "clk_50";
            pipeline = "0";
            clock_module_connection_point_for_c2h = "clk_50.clk";
         }
         CLOCK pll_0_c0
         {
            frequency = "100000000";
            source = "";
            Is_Clock_Source = "1";
            display_name = "c0 from pll_0";
            pipeline = "0";
            clock_module_connection_point_for_c2h = "pll_0.c0";
         }
         CLOCK cpu_clk
         {
            frequency = "100000000";
            source = "pll_0_c0";
            Is_Clock_Source = "0";
            display_name = "cpu_clk";
         }
      }
      clock_freq = "50000000";
      clock_freq = "50000000";
      board_class = "";
      view_master_columns = "1";
      view_master_priorities = "0";
      generate_hdl = "";
      bustype_column_width = "0";
      clock_column_width = "80";
      name_column_width = "75";
      desc_column_width = "75";
      base_column_width = "75";
      end_column_width = "75";
      do_log_history = "0";
   }
   MODULE pll_0
   {
      SLAVE s1
      {
         PORT_WIRING 
         {
            PORT inclk0
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "0";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT resetrequest
            {
               type = "resetrequest";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT address
            {
               type = "address";
               width = "3";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT read
            {
               type = "read";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT readdata
            {
               type = "readdata";
               width = "16";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT write
            {
               type = "write";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT writedata
            {
               type = "writedata";
               width = "16";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT clk
            {
               direction = "input";
               type = "clk";
               width = "1";
               Is_Enabled = "1";
            }
            PORT c0
            {
               Is_Enabled = "1";
               direction = "output";
               type = "out_clk";
               width = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "16";
            Address_Width = "3";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            Clock_Source = "clk_50";
            Has_Clock = "1";
            MASTERED_BY cpu_0/data_master
            {
               priority = "1";
               Offset_Address = "0x00011000";
            }
            Base_Address = "0x00011000";
            Has_IRQ = "0";
            Date_Modified = "";
            Instantiate_In_System_Module = "1";
            Requires_Internal_Clock_Promotion = "Yes";
            Is_Clock_Source = "1";
            IRQ_MASTER cpu_0/data_master
            {
               IRQ_Number = "0";
            }
            Address_Group = "0";
         }
      }
      PORT_WIRING 
      {
         PORT c0
         {
            type = "out_clk";
            width = "1";
            direction = "output";
            Is_Enabled = "0";
         }
         PORT areset
         {
            Is_Enabled = "0";
            direction = "input";
            width = "1";
         }
         PORT locked
         {
            Is_Enabled = "0";
            direction = "output";
            width = "1";
         }
         PORT pfdena
         {
            Is_Enabled = "0";
            direction = "input";
            width = "1";
         }
         PORT pllena
         {
            Is_Enabled = "0";
            direction = "input";
            width = "1";
         }
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
         areset = "None";
         pfdena = "None";
         locked = "None";
         pllena = "None";
         scanclk = "None";
         scandata = "None";
         scanread = "None";
         scanwrite = "None";
         scanclkena = "None";
         scanaclr = "None";
         scandataout = "None";
         scandone = "None";
         configupdate = "None";
         phasecounterselect = "None";
         phasedone = "None";
         phaseupdown = "None";
         phasestep = "None";
         UI_CONTROL 
         {
            pllena_port_exist = "0";
            areset_port_exist = "0";
            pfdena_port_exist = "0";
            locked_port_exist = "0";
         }
         ALTPLL_PORTS 
         {
            PORT inclk0
            {
               Is_Enabled = "1";
               direction = "input";
               width = "1";
            }
            PORT c0
            {
               Is_Enabled = "1";
               direction = "output";
               type = "out_clk";
               width = "1";
            }
         }
         CLOCK_SOURCES 
         {
            CLOCK c0
            {
               DIVIDE_BY = "1";
               DUTY_CYCLE = "50";
               MULTIPLY_BY = "2";
               PHASE_SHIFT = "-1806";
               clk_index = "0";
               clock_freq = "100000000";
               clock_unit = "MHz";
               type = "out_clk";
            }
         }
         CLOCK_INFO 
         {
            CLOCK inclk0
            {
               clock_freq = "50000000";
               clock_unit = "MHz";
               type = "in_clk";
            }
         }
         CNX_INFO 
         {
            CONSTANT 
            {
               NUMERIC 
               {
                  CLK0_DIVIDE_BY = "1";
                  CLK0_DUTY_CYCLE = "50";
                  CLK0_MULTIPLY_BY = "2";
                  INCLK0_INPUT_FREQUENCY = "20000";
               }
               STRING 
               {
                  CLK0_PHASE_SHIFT = "-1806";
                  COMPENSATE_CLOCK = "CLK0";
                  INTENDED_DEVICE_FAMILY = "Cyclone II";
                  LPM_TYPE = "altpll";
                  OPERATION_MODE = "NORMAL";
                  PORT_ACTIVECLOCK = "PORT_UNUSED";
                  PORT_ARESET = "PORT_UNUSED";
                  PORT_CLKBAD0 = "PORT_UNUSED";
                  PORT_CLKBAD1 = "PORT_UNUSED";
                  PORT_CLKLOSS = "PORT_UNUSED";
                  PORT_CLKSWITCH = "PORT_UNUSED";
                  PORT_CONFIGUPDATE = "PORT_UNUSED";
                  PORT_FBIN = "PORT_UNUSED";
                  PORT_INCLK0 = "PORT_USED";
                  PORT_INCLK1 = "PORT_UNUSED";
                  PORT_LOCKED = "PORT_UNUSED";
                  PORT_PFDENA = "PORT_UNUSED";
                  PORT_PHASECOUNTERSELECT = "PORT_UNUSED";
                  PORT_PHASEDONE = "PORT_UNUSED";
                  PORT_PHASESTEP = "PORT_UNUSED";
                  PORT_PHASEUPDOWN = "PORT_UNUSED";
                  PORT_PLLENA = "PORT_UNUSED";
                  PORT_SCANACLR = "PORT_UNUSED";
                  PORT_SCANCLK = "PORT_UNUSED";
                  PORT_SCANCLKENA = "PORT_UNUSED";
                  PORT_SCANDATA = "PORT_UNUSED";
                  PORT_SCANDATAOUT = "PORT_UNUSED";
                  PORT_SCANDONE = "PORT_UNUSED";
                  PORT_SCANREAD = "PORT_UNUSED";
                  PORT_SCANWRITE = "PORT_UNUSED";
                  PORT_clk0 = "PORT_USED";
                  PORT_clk1 = "PORT_UNUSED";
                  PORT_clk2 = "PORT_UNUSED";
                  PORT_clk3 = "PORT_UNUSED";
                  PORT_clk4 = "PORT_UNUSED";
                  PORT_clk5 = "PORT_UNUSED";
                  PORT_clkena0 = "PORT_UNUSED";
                  PORT_clkena1 = "PORT_UNUSED";
                  PORT_clkena2 = "PORT_UNUSED";
                  PORT_clkena3 = "PORT_UNUSED";
                  PORT_clkena4 = "PORT_UNUSED";
                  PORT_clkena5 = "PORT_UNUSED";
                  PORT_extclk0 = "PORT_UNUSED";
                  PORT_extclk1 = "PORT_UNUSED";
                  PORT_extclk2 = "PORT_UNUSED";
                  PORT_extclk3 = "PORT_UNUSED";
               }
            }
            LIBRARY = "altera_mf altera_mf.altera_mf_components.all";
            PRIVATE 
            {
               STRING 
               {
                  ACTIVECLK_CHECK = "0";
                  BANDWIDTH = "1.000";
                  BANDWIDTH_FEATURE_ENABLED = "0";
                  BANDWIDTH_FREQ_UNIT = "MHz";
                  BANDWIDTH_PRESET = "Low";
                  BANDWIDTH_USE_AUTO = "1";
                  BANDWIDTH_USE_CUSTOM = "0";
                  BANDWIDTH_USE_PRESET = "0";
                  CLKBAD_SWITCHOVER_CHECK = "0";
                  CLKLOSS_CHECK = "0";
                  CLKSWITCH_CHECK = "0";
                  CNX_NO_COMPENSATE_RADIO = "0";
                  CREATE_CLKBAD_CHECK = "0";
                  CREATE_INCLK1_CHECK = "0";
                  CUR_DEDICATED_CLK = "c0";
                  CUR_FBIN_CLK = "e0";
                  DEVICE_SPEED_GRADE = "Any";
                  DUTY_CYCLE0 = "50.00000000";
                  EFF_OUTPUT_FREQ_VALUE0 = "100.000000";
                  EXPLICIT_SWITCHOVER_COUNTER = "0";
                  EXT_FEEDBACK_RADIO = "0";
                  GLOCKED_COUNTER_EDIT_CHANGED = "1";
                  GLOCKED_FEATURE_ENABLED = "1";
                  GLOCKED_MODE_CHECK = "0";
                  HAS_MANUAL_SWITCHOVER = "1";
                  INCLK0_FREQ_EDIT = "50.0";
                  INCLK0_FREQ_UNIT_COMBO = "MHz";
                  INCLK1_FREQ_EDIT = "100.000";
                  INCLK1_FREQ_EDIT_CHANGED = "1";
                  INCLK1_FREQ_UNIT_CHANGED = "1";
                  INCLK1_FREQ_UNIT_COMBO = "MHz";
                  INTENDED_DEVICE_FAMILY = "Cyclone II";
                  INT_FEEDBACK__MODE_RADIO = "1";
                  LOCKED_OUTPUT_CHECK = "0";
                  LONG_SCAN_RADIO = "1";
                  LVDS_MODE_DATA_RATE = "300.000";
                  LVDS_PHASE_SHIFT_UNIT0 = "ps";
                  MIG_DEVICE_SPEED_GRADE = "Any";
                  MIRROR_CLK0 = "0";
                  NORMAL_MODE_RADIO = "1";
                  OUTPUT_FREQ0 = "100.00000000";
                  OUTPUT_FREQ_MODE0 = "0";
                  OUTPUT_FREQ_UNIT0 = "MHz";
                  PHASE_RECONFIG_FEATURE_ENABLED = "0";
                  PHASE_RECONFIG_INPUTS_CHECK = "0";
                  PHASE_SHIFT0 = "-65.00000000";
                  PHASE_SHIFT_STEP_ENABLED_CHECK = "0";
                  PHASE_SHIFT_UNIT0 = "deg";
                  PLL_ADVANCED_PARAM_CHECK = "0";
                  PLL_ARESET_CHECK = "0";
                  PLL_ENA_CHECK = "0";
                  PLL_FBMIMIC_CHECK = "0";
                  PLL_PFDENA_CHECK = "0";
                  PRIMARY_CLK_COMBO = "inclk0";
                  RECONFIG_FILE = "altpllpll_0.mif";
                  SACN_INPUTS_CHECK = "0";
                  SCAN_FEATURE_ENABLED = "0";
                  SELF_RESET_LOCK_LOSS = "0";
                  SHORT_SCAN_RADIO = "0";
                  SPREAD_FEATURE_ENABLED = "0";
                  SPREAD_FREQ = "50.000";
                  SPREAD_FREQ_UNIT = "KHz";
                  SPREAD_PERCENT = "0.500";
                  SPREAD_USE = "0";
                  SRC_SYNCH_COMP_RADIO = "0";
                  STICKY_CLK0 = "1";
                  SWITCHOVER_FEATURE_ENABLED = "1";
                  SYNTH_WRAPPER_GEN_POSTFIX = "0";
                  USE_CLK0 = "1";
                  USE_CLKENA0 = "0";
                  ZERO_DELAY_RADIO = "0";
               }
               NUMERIC 
               {
                  DIV_FACTOR0 = "1";
                  GLOCK_COUNTER_EDIT = "1048575";
                  LVDS_MODE_DATA_RATE_DIRTY = "0";
                  MULT_FACTOR0 = "2";
                  PLL_AUTOPLL_CHECK = "1";
                  PLL_ENHPLL_CHECK = "0";
                  PLL_FASTPLL_CHECK = "0";
                  PLL_LVDS_PLL_CHECK = "0";
                  PLL_TARGET_HARCOPY_CHECK = "0";
                  SWITCHOVER_COUNT_EDIT = "1";
                  USE_MIL_SPEED_GRADE = "0";
               }
            }
            USED_PORT 
            {
               c0 
               {
                  VALUE_1 = "0";
                  VALUE_2 = "0";
                  VALUE_3 = "0";
                  VALUE_4 = "0";
                  VALUE_5 = "OUTPUT_CLK_EXT";
                  VALUE_6 = "VCC";
                  VALUE_7 = "c0";
               }
               inclk0 
               {
                  VALUE_1 = "0";
                  VALUE_2 = "0";
                  VALUE_3 = "0";
                  VALUE_4 = "0";
                  VALUE_5 = "INPUT_CLK_EXT";
                  VALUE_6 = "GND";
                  VALUE_7 = "inclk0";
               }
            }
         }
         Config_Done = "0";
      }
      SYSTEM_BUILDER_INFO 
      {
         Required_Device_Family = "STRATIX,STRATIXII,STRATIXIII,STRATIXIV,CYCLONE,CYCLONEII,CYCLONEIII,TARPON,STRATIXGX,STRATIXIIGX,STRATIXIIGXLITE,ARRIAGX,ARRIAII,HARDCOPYIII";
         Instantiate_In_System_Module = "1";
         Is_Enabled = "1";
         Default_Module_Name = "pll";
         Top_Level_Ports_Are_Enumerated = "1";
         Clock_Source = "clk_50";
         View 
         {
            MESSAGES 
            {
            }
            Settings_Summary = " Avalon PLL: <br>
         input clock configured: <b>clk_50</b>
        ";
         }
      }
      class = "altera_avalon_pll";
      class_version = "7.080902";
      HDL_INFO 
      {
         Precompiled_Simulation_Library_Files = "";
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/pll_0.v, __PROJECT_DIRECTORY__/altpllpll_0.v";
         Synthesis_Only_Files = "";
      }
   }
   MODULE cpu_0
   {
      MASTER instruction_master
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "0";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "0";
            }
            PORT i_address
            {
               type = "address";
               width = "17";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT i_read
            {
               type = "read";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT i_readdata
            {
               type = "readdata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT i_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT i_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "32";
            Address_Width = "17";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "";
            Linewrap_Bursts = "";
            Burst_On_Burst_Boundaries_Only = "";
            Always_Burst_Max_Burst = "";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            Is_Instruction_Master = "1";
            Is_Readable = "1";
            Is_Writeable = "0";
            Address_Group = "0";
            Has_IRQ = "0";
            Irq_Scheme = "individual_requests";
            Interrupt_Range = "0-0";
         }
         MEMORY_MAP 
         {
            Entry cpu_0/jtag_debug_module
            {
               address = "0x00010800";
               span = "0x00000800";
               is_bridge = "0";
            }
            Entry onchip_memory2_0/s1
            {
               address = "0x00008000";
               span = "0x00005000";
               is_bridge = "0";
            }
         }
      }
      MASTER custom_instruction_master
      {
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "nios_custom_instruction";
            Data_Width = "32";
            Address_Width = "8";
            Is_Custom_Instruction = "1";
            Is_Enabled = "1";
            Max_Address_Width = "8";
            Base_Address = "N/A";
            Is_Visible = "0";
         }
         PORT_WIRING 
         {
            PORT dataa
            {
               type = "dataa";
               width = "32";
               direction = "output";
               Is_Enabled = "0";
            }
            PORT datab
            {
               type = "datab";
               width = "32";
               direction = "output";
               Is_Enabled = "0";
            }
            PORT result
            {
               type = "result";
               width = "32";
               direction = "input";
               Is_Enabled = "0";
            }
            PORT clk_en
            {
               type = "clk_en";
               width = "1";
               direction = "output";
               Is_Enabled = "0";
            }
            PORT reset
            {
               type = "reset";
               width = "1";
               direction = "output";
               Is_Enabled = "0";
            }
            PORT start
            {
               type = "start";
               width = "1";
               direction = "output";
               Is_Enabled = "0";
            }
            PORT done
            {
               type = "done";
               width = "1";
               direction = "input";
               Is_Enabled = "0";
            }
            PORT n
            {
               type = "n";
               width = "8";
               direction = "output";
               Is_Enabled = "0";
            }
            PORT a
            {
               type = "a";
               width = "5";
               direction = "output";
               Is_Enabled = "0";
            }
            PORT b
            {
               type = "b";
               width = "5";
               direction = "output";
               Is_Enabled = "0";
            }
            PORT c
            {
               type = "c";
               width = "5";
               direction = "output";
               Is_Enabled = "0";
            }
            PORT readra
            {
               type = "readra";
               width = "1";
               direction = "output";
               Is_Enabled = "0";
            }
            PORT readrb
            {
               type = "readrb";
               width = "1";
               direction = "output";
               Is_Enabled = "0";
            }
            PORT writerc
            {
               type = "writerc";
               width = "1";
               direction = "output";
               Is_Enabled = "0";
            }
            PORT A_ci_multi_a
            {
               Is_Enabled = "1";
               direction = "output";
               type = "multi_a";
               width = "5";
            }
            PORT A_ci_multi_b
            {
               Is_Enabled = "1";
               direction = "output";
               type = "multi_b";
               width = "5";
            }
            PORT A_ci_multi_c
            {
               Is_Enabled = "1";
               direction = "output";
               type = "multi_c";
               width = "5";
            }
            PORT A_ci_multi_clk_en
            {
               Is_Enabled = "1";
               direction = "output";
               type = "multi_clk_en";
               width = "1";
            }
            PORT A_ci_multi_dataa
            {
               Is_Enabled = "1";
               direction = "output";
               type = "multi_dataa";
               width = "32";
            }
            PORT A_ci_multi_datab
            {
               Is_Enabled = "1";
               direction = "output";
               type = "multi_datab";
               width = "32";
            }
            PORT A_ci_multi_done
            {
               Is_Enabled = "1";
               direction = "input";
               type = "multi_done";
               width = "1";
            }
            PORT A_ci_multi_estatus
            {
               Is_Enabled = "1";
               direction = "output";
               type = "multi_estatus";
               width = "1";
            }
            PORT A_ci_multi_ipending
            {
               Is_Enabled = "1";
               direction = "output";
               type = "multi_ipending";
               width = "32";
            }
            PORT A_ci_multi_n
            {
               Is_Enabled = "1";
               direction = "output";
               type = "multi_n";
               width = "8";
            }
            PORT A_ci_multi_readra
            {
               Is_Enabled = "1";
               direction = "output";
               type = "multi_readra";
               width = "1";
            }
            PORT A_ci_multi_readrb
            {
               Is_Enabled = "1";
               direction = "output";
               type = "multi_readrb";
               width = "1";
            }
            PORT A_ci_multi_result
            {
               Is_Enabled = "1";
               direction = "input";
               type = "multi_result";
               width = "32";
            }
            PORT A_ci_multi_start
            {
               Is_Enabled = "1";
               direction = "output";
               type = "multi_start";
               width = "1";
            }
            PORT A_ci_multi_status
            {
               Is_Enabled = "1";
               direction = "output";
               type = "multi_status";
               width = "1";
            }
            PORT A_ci_multi_writerc
            {
               Is_Enabled = "1";
               direction = "output";
               type = "multi_writerc";
               width = "1";
            }
            PORT clk
            {
               Is_Enabled = "1";
               direction = "input";
               type = "clk";
               width = "1";
            }
            PORT reset_n
            {
               Is_Enabled = "1";
               direction = "input";
               type = "reset_n";
               width = "1";
            }
         }
      }
      SLAVE jtag_debug_module
      {
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "dynamic";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Address_Span = "2048";
            Read_Latency = "0";
            Is_Memory_Device = "1";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "9";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            Accepts_External_Connections = "1";
            Requires_Internal_Connections = "";
            MASTERED_BY cpu_0/instruction_master
            {
               priority = "1";
               Offset_Address = "0x00010800";
            }
            MASTERED_BY cpu_0/data_master
            {
               priority = "1";
               Offset_Address = "0x00010800";
            }
            Base_Address = "0x00010800";
            Is_Readable = "1";
            Is_Writeable = "1";
            Uses_Tri_State_Data_Bus = "0";
            Has_IRQ = "0";
            JTAG_Hub_Base_Id = "1118278";
            JTAG_Hub_Instance_Id = "0";
            Address_Group = "0";
            IRQ_MASTER cpu_0/data_master
            {
               IRQ_Number = "NC";
            }
         }
         PORT_WIRING 
         {
            PORT jtag_debug_module_address
            {
               type = "address";
               width = "9";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT jtag_debug_module_begintransfer
            {
               type = "begintransfer";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT jtag_debug_module_byteenable
            {
               type = "byteenable";
               width = "4";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT jtag_debug_module_debugaccess
            {
               type = "debugaccess";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT jtag_debug_module_readdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT jtag_debug_module_resetrequest
            {
               type = "resetrequest";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT jtag_debug_module_select
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT jtag_debug_module_write
            {
               type = "write";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT jtag_debug_module_writedata
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT jtag_debug_module_clk
            {
               Is_Enabled = "1";
               direction = "input";
               type = "clk";
               width = "1";
            }
            PORT jtag_debug_module_reset
            {
               Is_Enabled = "1";
               direction = "input";
               type = "reset";
               width = "1";
            }
         }
      }
      MASTER data_master
      {
         SYSTEM_BUILDER_INFO 
         {
            Has_IRQ = "1";
            Irq_Scheme = "individual_requests";
            Bus_Type = "avalon";
            Is_Asynchronous = "0";
            DBS_Big_Endian = "0";
            Adapts_To = "";
            Do_Stream_Reads = "0";
            Do_Stream_Writes = "0";
            Max_Address_Width = "32";
            Data_Width = "32";
            Address_Width = "17";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            Is_Data_Master = "1";
            Address_Group = "0";
            Is_Readable = "1";
            Is_Writeable = "1";
            Interrupt_Range = "0-31";
         }
         PORT_WIRING 
         {
            PORT d_irq
            {
               type = "irq";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT d_address
            {
               type = "address";
               width = "17";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT d_byteenable
            {
               type = "byteenable";
               width = "4";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT d_read
            {
               type = "read";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT d_readdata
            {
               type = "readdata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT d_readdatavalid
            {
               type = "readdatavalid";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT d_waitrequest
            {
               type = "waitrequest";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT d_write
            {
               type = "write";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT d_writedata
            {
               type = "writedata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT jtag_debug_module_debugaccess_to_roms
            {
               type = "debugaccess";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         MEMORY_MAP 
         {
            Entry cpu_0/jtag_debug_module
            {
               address = "0x00010800";
               span = "0x00000800";
               is_bridge = "0";
            }
            Entry pll_0/s1
            {
               address = "0x00011000";
               span = "0x00000020";
               is_bridge = "0";
            }
            Entry onchip_memory2_0/s1
            {
               address = "0x00008000";
               span = "0x00005000";
               is_bridge = "0";
            }
            Entry vibrato_on/s1
            {
               address = "0x00011020";
               span = "0x00000010";
               is_bridge = "0";
            }
            Entry chorus_on/s1
            {
               address = "0x00011030";
               span = "0x00000010";
               is_bridge = "0";
            }
            Entry clk/s1
            {
               address = "0x00011040";
               span = "0x00000010";
               is_bridge = "0";
            }
            Entry adclrc/s1
            {
               address = "0x00011050";
               span = "0x00000010";
               is_bridge = "0";
            }
            Entry datain/s1
            {
               address = "0x00011060";
               span = "0x00000010";
               is_bridge = "0";
            }
            Entry dataout/s1
            {
               address = "0x00011070";
               span = "0x00000010";
               is_bridge = "0";
            }
         }
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
         cache_has_dcache = "1";
         cache_dcache_size = "2048";
         cache_dcache_line_size = "32";
         cache_dcache_bursts = "0";
         cache_dcache_ram_block_type = "AUTO";
         num_tightly_coupled_data_masters = "0";
         gui_num_tightly_coupled_data_masters = "0";
         gui_include_tightly_coupled_data_masters = "0";
         gui_omit_avalon_data_master = "0";
         cache_has_icache = "1";
         cache_icache_size = "4096";
         cache_icache_line_size = "32";
         cache_icache_ram_block_type = "AUTO";
         cache_icache_bursts = "0";
         num_tightly_coupled_instruction_masters = "0";
         gui_num_tightly_coupled_instruction_masters = "0";
         gui_include_tightly_coupled_instruction_masters = "0";
         debug_level = "2";
         include_oci = "1";
         oci_num_xbrk = "0";
         oci_num_dbrk = "0";
         oci_dbrk_trace = "0";
         oci_dbrk_pairs = "0";
         oci_onchip_trace = "0";
         oci_offchip_trace = "0";
         oci_data_trace = "0";
         include_third_party_debug_port = "0";
         oci_trace_addr_width = "7";
         oci_debugreq_signals = "0";
         oci_trigger_arming = "1";
         oci_embedded_pll = "0";
         oci_assign_jtag_instance_id = "0";
         oci_jtag_instance_id = "0";
         oci_num_pm = "0";
         oci_pm_width = "32";
         performance_counters_present = "0";
         performance_counters_width = "32";
         always_encrypt = "1";
         debug_simgen = "0";
         activate_model_checker = "0";
         activate_test_end_checker = "0";
         activate_trace = "1";
         activate_monitors = "1";
         clear_x_bits_ld_non_bypass = "1";
         bit_31_bypass_dcache = "1";
         hdl_sim_caches_cleared = "1";
         hbreak_test = "0";
         allow_full_address_range = "0";
         extra_exc_info = "0";
         branch_prediction_type = "Dynamic";
         bht_ptr_sz = "8";
         bht_index_pc_only = "0";
         gui_branch_prediction_type = "Automatic";
         full_waveform_signals = "0";
         export_pcb = "0";
         avalon_debug_port_present = "0";
         illegal_instructions_trap = "0";
         illegal_memory_access_detection = "0";
         illegal_mem_exc = "0";
         slave_access_error_exc = "0";
         division_error_exc = "0";
         eic_present = "0";
         num_shadow_reg_sets = "0";
         gui_mmu_present = "0";
         mmu_present = "0";
         process_id_num_bits = "8";
         tlb_ptr_sz = "7";
         tlb_num_ways = "16";
         udtlb_num_entries = "6";
         uitlb_num_entries = "4";
         fast_tlb_miss_exc_slave = "";
         fast_tlb_miss_exc_offset = "0x00000000";
         mpu_present = "0";
         mpu_num_data_regions = "8";
         mpu_num_inst_regions = "8";
         mpu_min_data_region_size_log2 = "12";
         mpu_min_inst_region_size_log2 = "12";
         mpu_use_limit = "0";
         hardware_divide_present = "0";
         gui_hardware_divide_setting = "0";
         hardware_multiply_present = "1";
         hardware_multiply_impl = "embedded_mul";
         shift_rot_impl = "fast_le_shift";
         gui_hardware_multiply_setting = "embedded_mul_fast_le_shift";
         reset_slave = "onchip_memory2_0/s1";
         break_slave = "cpu_0/jtag_debug_module";
         exc_slave = "onchip_memory2_0/s1";
         reset_offset = "0x00000000";
         break_offset = "0x00000020";
         exc_offset = "0x00000020";
         cpu_reset = "0";
         CPU_Implementation = "fast";
         cpu_selection = "f";
         device_family_id = "CYCLONEII";
         address_stall_present = "1";
         dsp_block_supports_shift = "0";
         mrams_present = "0";
         cpuid_value = "0";
         dont_overwrite_cpuid = "1";
         allow_legacy_sdk = "1";
         legacy_sdk_support = "1";
         inst_addr_width = "17";
         data_addr_width = "17";
         CPU_Architecture = "nios2";
         cache_icache_burst_type = "none";
         oci_sync_depth = "2";
         hardware_multiply_omits_msw = "1";
         big_endian = "0";
         break_slave_override = "";
         break_offset_override = "0x20";
         altera_show_unreleased_features = "0";
         altera_show_unpublished_features = "0";
         altera_internal_test = "0";
         alt_log_port_base = "";
         alt_log_port_type = "";
         cpuid_sz = "1";
         gui_illegal_instructions_trap = "0";
         advanced_exc = "0";
         gui_illegal_memory_access_detection = "0";
         cache_omit_dcache = "0";
         cache_omit_icache = "0";
         omit_instruction_master = "0";
         omit_data_master = "0";
         ras_ptr_sz = "4";
         jtb_ptr_sz = "5";
         ibuf_ptr_sz = "4";
         always_bypass_dcache = "0";
         iss_trace_on = "0";
         iss_trace_warning = "1";
         iss_trace_info = "1";
         iss_trace_disassembly = "0";
         iss_trace_registers = "0";
         iss_trace_instr_count = "0";
         iss_software_debug = "0";
         iss_software_debug_port = "9996";
         iss_memory_dump_start = "";
         iss_memory_dump_end = "";
         Boot_Copier = "boot_loader_cfi.srec";
         Boot_Copier_EPCS = "boot_loader_epcs.srec";
         Boot_Copier_EPCS_SII_SIII_CIII = "boot_loader_epcs_sii_siii_ciii.srec";
         Boot_Copier_BE = "boot_loader_cfi_be.srec";
         Boot_Copier_EPCS_BE = "boot_loader_epcs_be.srec";
         Boot_Copier_EPCS_SII_SIII_CIII_BE = "boot_loader_epcs_sii_siii_ciii_be.srec";
         CONSTANTS 
         {
            CONSTANT __nios_catch_irqs__
            {
               value = "1";
               comment = "Include panic handler for all irqs (needs uart)";
            }
            CONSTANT __nios_use_constructors__
            {
               value = "1";
               comment = "Call c++ static constructors";
            }
            CONSTANT __nios_use_small_printf__
            {
               value = "1";
               comment = "Smaller non-ANSI printf, with no floating point";
            }
            CONSTANT nasys_has_icache
            {
               value = "1";
               comment = "True if instruction cache present";
            }
            CONSTANT nasys_icache_size
            {
               value = "4096";
               comment = "Size in bytes of instruction cache";
            }
            CONSTANT nasys_icache_line_size
            {
               value = "32";
               comment = "Size in bytes of each icache line";
            }
            CONSTANT nasys_icache_line_size_log2
            {
               value = "5";
               comment = "Log2 size in bytes of each icache line";
            }
            CONSTANT nasys_has_dcache
            {
               value = "1";
               comment = "True if instruction cache present";
            }
            CONSTANT nasys_dcache_size
            {
               value = "2048";
               comment = "Size in bytes of data cache";
            }
            CONSTANT nasys_dcache_line_size
            {
               value = "32";
               comment = "Size in bytes of each dcache line";
            }
            CONSTANT nasys_dcache_line_size_log2
            {
               value = "5";
               comment = "Log2 size in bytes of each dcache line";
            }
         }
         license_status = "encrypted";
         mainmem_slave = "onchip_memory2_0/s1";
         datamem_slave = "onchip_memory2_0/s1";
         maincomm_slave = "";
         germs_monitor_id = "";
      }
      class = "altera_nios2";
      class_version = "7.080902";
      SYSTEM_BUILDER_INFO 
      {
         Is_Enabled = "1";
         Clock_Source = "cpu_clk";
         Has_Clock = "1";
         Parameters_Signature = "";
         Is_CPU = "1";
         Instantiate_In_System_Module = "1";
         Required_Device_Family = "STRATIX,STRATIXGX,STRATIXII,STRATIXIIGX,STRATIXIIGXLITE,STRATIXIII,STRATIXIV,CYCLONE,CYCLONEII,CYCLONEIII,HARDCOPYIII,ARRIAII,TARPON,HARDCOPYIV";
         Default_Module_Name = "cpu";
         Top_Level_Ports_Are_Enumerated = "1";
         View 
         {
            Settings_Summary = "Nios II/f
            <br>&nbsp;&nbsp;4-Kbyte Instruction Cache
            <br>&nbsp;&nbsp;2-Kbyte Data Cache
            <br>&nbsp;&nbsp;JTAG Debug Module
            ";
            MESSAGES 
            {
            }
         }
      }
      iss_model_name = "altera_nios2";
      HDL_INFO 
      {
         PLI_Files = "";
         Precompiled_Simulation_Library_Files = "";
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/cpu_0_test_bench.v, __PROJECT_DIRECTORY__/cpu_0_mult_cell.v, __PROJECT_DIRECTORY__/cpu_0_oci_test_bench.v, __PROJECT_DIRECTORY__/cpu_0_jtag_debug_module_tck.v, __PROJECT_DIRECTORY__/cpu_0_jtag_debug_module_sysclk.v, __PROJECT_DIRECTORY__/cpu_0_jtag_debug_module_wrapper.v, __PROJECT_DIRECTORY__/cpu_0.v";
         Synthesis_Only_Files = "";
      }
      MASTER tightly_coupled_instruction_master_0
      {
         PORT_WIRING 
         {
         }
         SYSTEM_BUILDER_INFO 
         {
            Register_Incoming_Signals = "0";
            Bus_Type = "avalon";
            Data_Width = "32";
            Max_Address_Width = "31";
            Address_Width = "8";
            Is_Instruction_Master = "1";
            Has_IRQ = "0";
            Is_Enabled = "0";
            Is_Big_Endian = "0";
            Connection_Limit = "1";
            Is_Channel = "1";
         }
      }
      MASTER tightly_coupled_instruction_master_1
      {
         PORT_WIRING 
         {
         }
         SYSTEM_BUILDER_INFO 
         {
            Register_Incoming_Signals = "0";
            Bus_Type = "avalon";
            Data_Width = "32";
            Max_Address_Width = "31";
            Address_Width = "8";
            Address_Group = "0";
            Is_Instruction_Master = "1";
            Is_Readable = "1";
            Is_Writeable = "0";
            Has_IRQ = "0";
            Is_Enabled = "0";
            Is_Big_Endian = "0";
            Connection_Limit = "1";
            Is_Channel = "1";
         }
      }
      MASTER tightly_coupled_instruction_master_2
      {
         PORT_WIRING 
         {
         }
         SYSTEM_BUILDER_INFO 
         {
            Register_Incoming_Signals = "0";
            Bus_Type = "avalon";
            Data_Width = "32";
            Max_Address_Width = "31";
            Address_Width = "8";
            Address_Group = "0";
            Is_Instruction_Master = "1";
            Is_Readable = "1";
            Is_Writeable = "0";
            Has_IRQ = "0";
            Is_Enabled = "0";
            Is_Big_Endian = "0";
            Connection_Limit = "1";
            Is_Channel = "1";
         }
      }
      MASTER tightly_coupled_instruction_master_3
      {
         PORT_WIRING 
         {
         }
         SYSTEM_BUILDER_INFO 
         {
            Register_Incoming_Signals = "0";
            Bus_Type = "avalon";
            Data_Width = "32";
            Max_Address_Width = "31";
            Address_Width = "8";
            Address_Group = "0";
            Is_Instruction_Master = "1";
            Is_Readable = "1";
            Is_Writeable = "0";
            Has_IRQ = "0";
            Is_Enabled = "0";
            Is_Big_Endian = "0";
            Connection_Limit = "1";
            Is_Channel = "1";
         }
      }
      MASTER data_master2
      {
         PORT_WIRING 
         {
         }
         SYSTEM_BUILDER_INFO 
         {
            Register_Incoming_Signals = "1";
            Bus_Type = "avalon";
            Data_Width = "32";
            Max_Address_Width = "31";
            Address_Width = "8";
            Address_Group = "0";
            Is_Data_Master = "1";
            Is_Readable = "1";
            Is_Writeable = "1";
            Has_IRQ = "0";
            Is_Enabled = "0";
            Is_Big_Endian = "0";
         }
      }
      MASTER tightly_coupled_data_master_0
      {
         PORT_WIRING 
         {
         }
         SYSTEM_BUILDER_INFO 
         {
            Register_Incoming_Signals = "0";
            Bus_Type = "avalon";
            Data_Width = "32";
            Max_Address_Width = "31";
            Address_Width = "8";
            Address_Group = "0";
            Is_Data_Master = "1";
            Is_Readable = "1";
            Is_Writeable = "1";
            Has_IRQ = "0";
            Is_Enabled = "0";
            Is_Big_Endian = "0";
            Connection_Limit = "1";
            Is_Channel = "1";
         }
      }
      MASTER tightly_coupled_data_master_1
      {
         PORT_WIRING 
         {
         }
         SYSTEM_BUILDER_INFO 
         {
            Register_Incoming_Signals = "0";
            Bus_Type = "avalon";
            Data_Width = "32";
            Max_Address_Width = "31";
            Address_Width = "8";
            Address_Group = "0";
            Is_Data_Master = "1";
            Is_Readable = "1";
            Is_Writeable = "1";
            Has_IRQ = "0";
            Is_Enabled = "0";
            Is_Big_Endian = "0";
            Connection_Limit = "1";
            Is_Channel = "1";
         }
      }
      MASTER tightly_coupled_data_master_2
      {
         PORT_WIRING 
         {
         }
         SYSTEM_BUILDER_INFO 
         {
            Register_Incoming_Signals = "0";
            Bus_Type = "avalon";
            Data_Width = "32";
            Max_Address_Width = "31";
            Address_Width = "8";
            Address_Group = "0";
            Is_Data_Master = "1";
            Is_Readable = "1";
            Is_Writeable = "1";
            Has_IRQ = "0";
            Is_Enabled = "0";
            Is_Big_Endian = "0";
            Connection_Limit = "1";
            Is_Channel = "1";
         }
      }
      MASTER tightly_coupled_data_master_3
      {
         PORT_WIRING 
         {
         }
         SYSTEM_BUILDER_INFO 
         {
            Register_Incoming_Signals = "0";
            Bus_Type = "avalon";
            Data_Width = "32";
            Max_Address_Width = "31";
            Address_Width = "8";
            Address_Group = "0";
            Is_Data_Master = "1";
            Is_Readable = "1";
            Is_Writeable = "1";
            Has_IRQ = "0";
            Is_Enabled = "0";
            Is_Big_Endian = "0";
            Connection_Limit = "1";
            Is_Channel = "1";
         }
      }
      PORT_WIRING 
      {
         PORT jtag_debug_trigout
         {
            width = "1";
            direction = "output";
            Is_Enabled = "0";
         }
         PORT jtag_debug_offchip_trace_clk
         {
            width = "1";
            direction = "output";
            Is_Enabled = "0";
         }
         PORT jtag_debug_offchip_trace_data
         {
            width = "18";
            direction = "output";
            Is_Enabled = "0";
         }
         PORT clkx2
         {
            width = "1";
            direction = "input";
            Is_Enabled = "0";
            visible = "0";
         }
      }
      SIMULATION 
      {
         DISPLAY 
         {
            SIGNAL aaa
            {
               format = "Logic";
               name = "i_readdata";
               radix = "hexadecimal";
            }
            SIGNAL aab
            {
               format = "Logic";
               name = "i_readdatavalid";
               radix = "hexadecimal";
            }
            SIGNAL aac
            {
               format = "Logic";
               name = "i_waitrequest";
               radix = "hexadecimal";
            }
            SIGNAL aad
            {
               format = "Logic";
               name = "i_address";
               radix = "hexadecimal";
            }
            SIGNAL aae
            {
               format = "Logic";
               name = "i_read";
               radix = "hexadecimal";
            }
            SIGNAL aaf
            {
               format = "Logic";
               name = "clk";
               radix = "hexadecimal";
            }
            SIGNAL aag
            {
               format = "Logic";
               name = "reset_n";
               radix = "hexadecimal";
            }
            SIGNAL aah
            {
               format = "Logic";
               name = "d_readdata";
               radix = "hexadecimal";
            }
            SIGNAL aai
            {
               format = "Logic";
               name = "d_waitrequest";
               radix = "hexadecimal";
            }
            SIGNAL aaj
            {
               format = "Logic";
               name = "d_irq";
               radix = "hexadecimal";
            }
            SIGNAL aak
            {
               format = "Logic";
               name = "d_address";
               radix = "hexadecimal";
            }
            SIGNAL aal
            {
               format = "Logic";
               name = "d_byteenable";
               radix = "hexadecimal";
            }
            SIGNAL aam
            {
               format = "Logic";
               name = "d_read";
               radix = "hexadecimal";
            }
            SIGNAL aan
            {
               format = "Logic";
               name = "d_write";
               radix = "hexadecimal";
            }
            SIGNAL aao
            {
               format = "Logic";
               name = "d_writedata";
               radix = "hexadecimal";
            }
            SIGNAL aap
            {
               format = "Logic";
               name = "d_readdatavalid";
               radix = "hexadecimal";
            }
            SIGNAL aaq
            {
               format = "Logic";
               name = "A_ci_multi_dataa";
               radix = "hexadecimal";
            }
            SIGNAL aar
            {
               format = "Logic";
               name = "A_ci_multi_datab";
               radix = "hexadecimal";
            }
            SIGNAL aas
            {
               format = "Logic";
               name = "A_ci_multi_ipending";
               radix = "hexadecimal";
            }
            SIGNAL aat
            {
               format = "Logic";
               name = "A_ci_multi_status";
               radix = "hexadecimal";
            }
            SIGNAL aau
            {
               format = "Logic";
               name = "A_ci_multi_estatus";
               radix = "hexadecimal";
            }
            SIGNAL aav
            {
               format = "Logic";
               name = "A_ci_multi_n";
               radix = "hexadecimal";
            }
            SIGNAL aaw
            {
               format = "Logic";
               name = "A_ci_multi_a";
               radix = "hexadecimal";
            }
            SIGNAL aax
            {
               format = "Logic";
               name = "A_ci_multi_b";
               radix = "hexadecimal";
            }
            SIGNAL aay
            {
               format = "Logic";
               name = "A_ci_multi_c";
               radix = "hexadecimal";
            }
            SIGNAL aaz
            {
               format = "Logic";
               name = "A_ci_multi_readra";
               radix = "hexadecimal";
            }
            SIGNAL aba
            {
               format = "Logic";
               name = "A_ci_multi_readrb";
               radix = "hexadecimal";
            }
            SIGNAL abb
            {
               format = "Logic";
               name = "A_ci_multi_writerc";
               radix = "hexadecimal";
            }
            SIGNAL abc
            {
               format = "Logic";
               name = "A_ci_multi_result";
               radix = "hexadecimal";
            }
            SIGNAL abd
            {
               format = "Logic";
               name = "A_ci_multi_clk_en";
               radix = "hexadecimal";
            }
            SIGNAL abe
            {
               format = "Logic";
               name = "A_ci_multi_start";
               radix = "hexadecimal";
            }
            SIGNAL abf
            {
               format = "Logic";
               name = "A_ci_multi_done";
               radix = "hexadecimal";
            }
            SIGNAL abg
            {
               format = "Divider";
               name = "base pipeline";
               radix = "";
            }
            SIGNAL abh
            {
               format = "Logic";
               name = "clk";
               radix = "hexadecimal";
            }
            SIGNAL abi
            {
               format = "Logic";
               name = "reset_n";
               radix = "hexadecimal";
            }
            SIGNAL abj
            {
               format = "Logic";
               name = "D_stall";
               radix = "hexadecimal";
            }
            SIGNAL abk
            {
               format = "Logic";
               name = "A_stall";
               radix = "hexadecimal";
            }
            SIGNAL abl
            {
               format = "Logic";
               name = "F_pcb_nxt";
               radix = "hexadecimal";
            }
            SIGNAL abm
            {
               format = "Logic";
               name = "F_pcb";
               radix = "hexadecimal";
            }
            SIGNAL abn
            {
               format = "Logic";
               name = "D_pcb";
               radix = "hexadecimal";
            }
            SIGNAL abo
            {
               format = "Logic";
               name = "E_pcb";
               radix = "hexadecimal";
            }
            SIGNAL abp
            {
               format = "Logic";
               name = "M_pcb";
               radix = "hexadecimal";
            }
            SIGNAL abq
            {
               format = "Logic";
               name = "A_pcb";
               radix = "hexadecimal";
            }
            SIGNAL abr
            {
               format = "Logic";
               name = "W_pcb";
               radix = "hexadecimal";
            }
            SIGNAL abs
            {
               format = "Logic";
               name = "F_vinst";
               radix = "ascii";
            }
            SIGNAL abt
            {
               format = "Logic";
               name = "D_vinst";
               radix = "ascii";
            }
            SIGNAL abu
            {
               format = "Logic";
               name = "E_vinst";
               radix = "ascii";
            }
            SIGNAL abv
            {
               format = "Logic";
               name = "M_vinst";
               radix = "ascii";
            }
            SIGNAL abw
            {
               format = "Logic";
               name = "A_vinst";
               radix = "ascii";
            }
            SIGNAL abx
            {
               format = "Logic";
               name = "W_vinst";
               radix = "ascii";
            }
            SIGNAL aby
            {
               format = "Logic";
               name = "F_inst_ram_hit";
               radix = "hexadecimal";
            }
            SIGNAL abz
            {
               format = "Logic";
               name = "F_issue";
               radix = "hexadecimal";
            }
            SIGNAL aca
            {
               format = "Logic";
               name = "F_kill";
               radix = "hexadecimal";
            }
            SIGNAL acb
            {
               format = "Logic";
               name = "D_kill";
               radix = "hexadecimal";
            }
            SIGNAL acc
            {
               format = "Logic";
               name = "D_refetch";
               radix = "hexadecimal";
            }
            SIGNAL acd
            {
               format = "Logic";
               name = "D_issue";
               radix = "hexadecimal";
            }
            SIGNAL ace
            {
               format = "Logic";
               name = "D_valid";
               radix = "hexadecimal";
            }
            SIGNAL acf
            {
               format = "Logic";
               name = "E_valid";
               radix = "hexadecimal";
            }
            SIGNAL acg
            {
               format = "Logic";
               name = "M_valid";
               radix = "hexadecimal";
            }
            SIGNAL ach
            {
               format = "Logic";
               name = "A_valid";
               radix = "hexadecimal";
            }
            SIGNAL aci
            {
               format = "Logic";
               name = "W_valid";
               radix = "hexadecimal";
            }
            SIGNAL acj
            {
               format = "Logic";
               name = "W_wr_dst_reg";
               radix = "hexadecimal";
            }
            SIGNAL ack
            {
               format = "Logic";
               name = "W_dst_regnum";
               radix = "hexadecimal";
            }
            SIGNAL acl
            {
               format = "Logic";
               name = "W_wr_data";
               radix = "hexadecimal";
            }
            SIGNAL acm
            {
               format = "Logic";
               name = "D_en";
               radix = "hexadecimal";
            }
            SIGNAL acn
            {
               format = "Logic";
               name = "E_en";
               radix = "hexadecimal";
            }
            SIGNAL aco
            {
               format = "Logic";
               name = "M_en";
               radix = "hexadecimal";
            }
            SIGNAL acp
            {
               format = "Logic";
               name = "A_en";
               radix = "hexadecimal";
            }
            SIGNAL acq
            {
               format = "Logic";
               name = "F_iw";
               radix = "hexadecimal";
            }
            SIGNAL acr
            {
               format = "Logic";
               name = "D_iw";
               radix = "hexadecimal";
            }
            SIGNAL acs
            {
               format = "Logic";
               name = "E_iw";
               radix = "hexadecimal";
            }
            SIGNAL act
            {
               format = "Logic";
               name = "M_pipe_flush";
               radix = "hexadecimal";
            }
            SIGNAL acu
            {
               format = "Logic";
               name = "M_pipe_flush_baddr";
               radix = "hexadecimal";
            }
            SIGNAL acv
            {
               format = "Logic";
               name = "intr_req";
               radix = "hexadecimal";
            }
            SIGNAL acw
            {
               format = "Logic";
               name = "A_status_reg";
               radix = "hexadecimal";
            }
            SIGNAL acx
            {
               format = "Logic";
               name = "A_status_reg_pie";
               radix = "hexadecimal";
            }
            SIGNAL acy
            {
               format = "Logic";
               name = "A_estatus_reg";
               radix = "hexadecimal";
            }
            SIGNAL acz
            {
               format = "Logic";
               name = "A_estatus_reg_pie";
               radix = "hexadecimal";
            }
            SIGNAL ada
            {
               format = "Logic";
               name = "A_bstatus_reg";
               radix = "hexadecimal";
            }
            SIGNAL adb
            {
               format = "Logic";
               name = "A_bstatus_reg_pie";
               radix = "hexadecimal";
            }
            SIGNAL adc
            {
               format = "Logic";
               name = "A_ienable_reg";
               radix = "hexadecimal";
            }
            SIGNAL add
            {
               format = "Logic";
               name = "A_ienable_reg_irq0";
               radix = "hexadecimal";
            }
            SIGNAL ade
            {
               format = "Logic";
               name = "A_ipending_reg";
               radix = "hexadecimal";
            }
            SIGNAL adf
            {
               format = "Logic";
               name = "A_ipending_reg_irq0";
               radix = "hexadecimal";
            }
            SIGNAL adg
            {
               format = "Logic";
               name = "A_cpuid_reg";
               radix = "hexadecimal";
            }
            SIGNAL adh
            {
               format = "Logic";
               name = "E_valid_prior_to_hbreak";
               radix = "hexadecimal";
            }
            SIGNAL adi
            {
               format = "Divider";
               name = "multicycle_custom_instruction";
               radix = "";
            }
            SIGNAL adj
            {
               format = "Logic";
               name = "A_ctrl_custom_multi";
               radix = "hexadecimal";
            }
            SIGNAL adk
            {
               format = "Logic";
               name = "A_ci_multi_dataa";
               radix = "hexadecimal";
            }
            SIGNAL adl
            {
               format = "Logic";
               name = "A_ci_multi_datab";
               radix = "hexadecimal";
            }
            SIGNAL adm
            {
               format = "Logic";
               name = "A_ci_multi_ipending";
               radix = "hexadecimal";
            }
            SIGNAL adn
            {
               format = "Logic";
               name = "A_ci_multi_status";
               radix = "hexadecimal";
            }
            SIGNAL ado
            {
               format = "Logic";
               name = "A_ci_multi_estatus";
               radix = "hexadecimal";
            }
            SIGNAL adp
            {
               format = "Logic";
               name = "A_ci_multi_n";
               radix = "hexadecimal";
            }
            SIGNAL adq
            {
               format = "Logic";
               name = "A_ci_multi_readra";
               radix = "hexadecimal";
            }
            SIGNAL adr
            {
               format = "Logic";
               name = "A_ci_multi_readrb";
               radix = "hexadecimal";
            }
            SIGNAL ads
            {
               format = "Logic";
               name = "A_ci_multi_writerc";
               radix = "hexadecimal";
            }
            SIGNAL adt
            {
               format = "Logic";
               name = "A_ci_multi_result";
               radix = "hexadecimal";
            }
            SIGNAL adu
            {
               format = "Logic";
               name = "A_ci_multi_clk_en";
               radix = "hexadecimal";
            }
            SIGNAL adv
            {
               format = "Logic";
               name = "A_ci_multi_start";
               radix = "hexadecimal";
            }
            SIGNAL adw
            {
               format = "Logic";
               name = "A_ci_multi_done";
               radix = "hexadecimal";
            }
            SIGNAL adx
            {
               format = "Logic";
               name = "A_ci_multi_stall";
               radix = "hexadecimal";
            }
         }
      }
   }
   MODULE cpu_0_fpoint
   {
      SLAVE s1
      {
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "nios_custom_instruction";
            Data_Width = "32";
            Address_Width = "2";
            Is_Custom_Instruction = "1";
            Is_Enabled = "1";
            ci_operands = "2";
            ci_cycles = "1";
            ci_inst_type = "variable multicycle";
            Has_Base_Address = "1";
            Base_Address = "0x000000fc";
            ci_macro_name = "fpoint";
            MASTERED_BY cpu_0/custom_instruction_master
            {
               priority = "1";
            }
            IRQ_MASTER cpu_0/custom_instruction_master
            {
               IRQ_Number = "NC";
            }
            Is_Base_Locked = "1";
            Is_Visible = "0";
            Address_Group = "0";
         }
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT clk_en
            {
               type = "clk_en";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset
            {
               type = "reset";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT start
            {
               type = "start";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT n
            {
               type = "n";
               width = "2";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT dataa
            {
               type = "dataa";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT datab
            {
               type = "datab";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT result
            {
               type = "result";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT done
            {
               type = "done";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
         Use_Divider = "0";
         ci_macro_name = "fpoint";
         ci_cycles = "1";
         ci_instr_format = "RR";
         ci_has_prefix = "0";
         ci_inst_type = "variable multicycle";
         ci_operands = "2";
         Precision = "1";
         Reduced_Operation = "0";
      }
      SYSTEM_BUILDER_INFO 
      {
         Is_Custom_Instruction = "1";
         Is_Enabled = "1";
         Date_Modified = "";
         Is_Visible = "0";
         Instantiate_In_System_Module = "1";
         Clock_Source = "cpu_clk";
         View 
         {
            MESSAGES 
            {
            }
         }
      }
      SIMULATION 
      {
         DISPLAY 
         {
            SIGNAL a
            {
               name = "clk";
            }
            SIGNAL b
            {
               name = "clk_en";
            }
            SIGNAL c
            {
               name = "reset";
            }
            SIGNAL d
            {
               name = "start";
            }
            SIGNAL e
            {
               name = "n";
               radix = "hexadecimal";
            }
            SIGNAL f
            {
               name = "dataa";
               radix = "hexadecimal";
            }
            SIGNAL g
            {
               name = "datab";
               radix = "hexadecimal";
            }
            SIGNAL h
            {
               name = "result";
               radix = "hexadecimal";
            }
            SIGNAL i
            {
               name = "done";
            }
         }
      }
      class = "altera_nios_custom_instr_floating_point";
      class_version = "7.080902";
      HDL_INFO 
      {
         Precompiled_Simulation_Library_Files = "";
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/cpu_0_fpoint.v";
         Synthesis_Only_Files = "";
      }
      PORT_WIRING 
      {
      }
   }
   MODULE onchip_memory2_0
   {
      SLAVE s1
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "0";
            }
            PORT address
            {
               type = "address";
               width = "13";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT clken
            {
               type = "clken";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
               default_value = "1'b1";
            }
            PORT read
            {
               type = "read";
               width = "1";
               direction = "input";
               Is_Enabled = "0";
            }
            PORT readdata
            {
               type = "readdata";
               width = "32";
               direction = "output";
               Is_Enabled = "1";
            }
            PORT write
            {
               type = "write";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT writedata
            {
               type = "writedata";
               width = "32";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT debugaccess
            {
               type = "debugaccess";
               width = "1";
               direction = "input";
               Is_Enabled = "0";
            }
            PORT byteenable
            {
               type = "byteenable";
               width = "4";
               direction = "input";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "0cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "dynamic";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Address_Span = "20480";
            Read_Latency = "1";
            Is_Memory_Device = "1";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "32";
            Address_Width = "13";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY cpu_0/instruction_master
            {
               priority = "1";
               Offset_Address = "0x00008000";
            }
            MASTERED_BY cpu_0/data_master
            {
               priority = "1";
               Offset_Address = "0x00008000";
            }
            Base_Address = "0x00008000";
            Address_Group = "0";
            Has_IRQ = "0";
            Is_Channel = "1";
            Is_Writable = "1";
            IRQ_MASTER cpu_0/data_master
            {
               IRQ_Number = "NC";
            }
         }
      }
      iss_model_name = "altera_memory";
      WIZARD_SCRIPT_ARGUMENTS 
      {
         allow_mram_sim_contents_only_file = "0";
         ram_block_type = "M4K";
         init_contents_file = "onchip_memory2_0";
         non_default_init_file_enabled = "0";
         gui_ram_block_type = "Automatic";
         Writeable = "1";
         dual_port = "0";
         Size_Value = "20480";
         Size_Multiple = "1";
         use_shallow_mem_blocks = "0";
         init_mem_content = "1";
         allow_in_system_memory_content_editor = "0";
         instance_id = "NONE";
         read_during_write_mode = "DONT_CARE";
         ignore_auto_block_type_assignment = "1";
         MAKE 
         {
            TARGET delete_placeholder_warning
            {
               onchip_memory2_0 
               {
                  Command1 = "rm -f $(SIMDIR)/contents_file_warning.txt";
                  Is_Phony = "1";
                  Target_File = "do_delete_placeholder_warning";
               }
            }
            TARGET hex
            {
               onchip_memory2_0 
               {
                  Command1 = "@echo Post-processing to create $(notdir $@)";
                  Command2 = "elf2hex $(ELF) 0x00008000 0xCFFF --width=32 $(QUARTUS_PROJECT_DIR)/onchip_memory2_0.hex --create-lanes=0 ";
                  Dependency = "$(ELF)";
                  Target_File = "$(QUARTUS_PROJECT_DIR)/onchip_memory2_0.hex";
               }
            }
            TARGET sim
            {
               onchip_memory2_0 
               {
                  Command1 = "if [ ! -d $(SIMDIR) ]; then mkdir $(SIMDIR) ; fi";
                  Command2 = "@echo Hardware simulation is not enabled for the target SOPC Builder system. Skipping creation of hardware simulation model contents and simulation symbol files. \\(Note: This does not affect the instruction set simulator.\\)";
                  Command3 = "touch $(SIMDIR)/dummy_file";
                  Dependency = "$(ELF)";
                  Target_File = "$(SIMDIR)/dummy_file";
               }
            }
         }
         contents_info = "";
      }
      SIMULATION 
      {
         DISPLAY 
         {
            SIGNAL a
            {
               name = "chipselect";
               conditional = "1";
            }
            SIGNAL c
            {
               name = "address";
               radix = "hexadecimal";
            }
            SIGNAL d
            {
               name = "byteenable";
               radix = "binary";
               conditional = "1";
            }
            SIGNAL e
            {
               name = "readdata";
               radix = "hexadecimal";
            }
            SIGNAL b
            {
               name = "write";
               conditional = "1";
            }
            SIGNAL f
            {
               name = "writedata";
               radix = "hexadecimal";
               conditional = "1";
            }
         }
      }
      SYSTEM_BUILDER_INFO 
      {
         Prohibited_Device_Family = "MERCURY, APEX20K, APEX20KE, APEX20KC, APEXII, ACEX1K, FLEX10KE, EXCALIBUR_ARM, MAXII";
         Instantiate_In_System_Module = "1";
         Is_Enabled = "1";
         Default_Module_Name = "onchip_memory";
         Top_Level_Ports_Are_Enumerated = "1";
         Clock_Source = "cpu_clk";
         Has_Clock = "1";
         View 
         {
            MESSAGES 
            {
            }
         }
      }
      class = "altera_avalon_onchip_memory2";
      class_version = "7.080902";
      HDL_INFO 
      {
         Precompiled_Simulation_Library_Files = "";
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/onchip_memory2_0.v";
         Synthesis_Only_Files = "";
      }
      SLAVE s2
      {
         PORT_WIRING 
         {
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Is_Memory_Device = "1";
            Address_Group = "0";
            Address_Alignment = "dynamic";
            Address_Width = "13";
            Data_Width = "32";
            Has_IRQ = "0";
            Read_Wait_States = "0";
            Write_Wait_States = "0";
            Address_Span = "20480";
            Read_Latency = "1";
            Is_Channel = "1";
            Is_Enabled = "0";
            Is_Writable = "1";
         }
      }
      PORT_WIRING 
      {
      }
   }
   MODULE vibrato_on
   {
      SLAVE s1
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT address
            {
               type = "address";
               width = "2";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT readdata
            {
               type = "readdata";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "1";
            Address_Width = "2";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY cpu_0/data_master
            {
               priority = "1";
               Offset_Address = "0x00011020";
            }
            Base_Address = "0x00011020";
            Has_IRQ = "0";
            Address_Group = "0";
            IRQ_MASTER cpu_0/data_master
            {
               IRQ_Number = "NC";
            }
            Is_Readable = "1";
            Is_Writable = "0";
         }
      }
      PORT_WIRING 
      {
         PORT in_port
         {
            type = "export";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT out_port
         {
            direction = "output";
            Is_Enabled = "0";
            width = "1";
         }
         PORT bidir_port
         {
            direction = "inout";
            Is_Enabled = "0";
            width = "1";
         }
      }
      class = "altera_avalon_pio";
      class_version = "7.080902";
      SYSTEM_BUILDER_INFO 
      {
         Is_Enabled = "1";
         Instantiate_In_System_Module = "1";
         Wire_Test_Bench_Values = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         Clock_Source = "cpu_clk";
         Has_Clock = "1";
         Date_Modified = "";
         View 
         {
            MESSAGES 
            {
            }
            Settings_Summary = " 1-bit PIO using <br>
					
					 input pins with edge type NONE and interrupt source NONE
					";
         }
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
         Do_Test_Bench_Wiring = "0";
         Driven_Sim_Value = "0";
         has_tri = "0";
         has_out = "0";
         has_in = "1";
         capture = "0";
         Data_Width = "1";
         reset_value = "0";
         edge_type = "NONE";
         irq_type = "NONE";
         bit_clearing_edge_register = "0";
         bit_modifying_output_register = "0";
      }
      HDL_INFO 
      {
         Precompiled_Simulation_Library_Files = "";
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/vibrato_on.v";
         Synthesis_Only_Files = "";
      }
   }
   MODULE chorus_on
   {
      SLAVE s1
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT address
            {
               type = "address";
               width = "2";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT readdata
            {
               type = "readdata";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "1";
            Address_Width = "2";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY cpu_0/data_master
            {
               priority = "1";
               Offset_Address = "0x00011030";
            }
            Base_Address = "0x00011030";
            Has_IRQ = "0";
            Address_Group = "0";
            IRQ_MASTER cpu_0/data_master
            {
               IRQ_Number = "NC";
            }
            Is_Readable = "1";
            Is_Writable = "0";
         }
      }
      PORT_WIRING 
      {
         PORT in_port
         {
            type = "export";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT out_port
         {
            direction = "output";
            Is_Enabled = "0";
            width = "1";
         }
         PORT bidir_port
         {
            direction = "inout";
            Is_Enabled = "0";
            width = "1";
         }
      }
      class = "altera_avalon_pio";
      class_version = "7.080902";
      SYSTEM_BUILDER_INFO 
      {
         Is_Enabled = "1";
         Instantiate_In_System_Module = "1";
         Wire_Test_Bench_Values = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         Clock_Source = "cpu_clk";
         Has_Clock = "1";
         Date_Modified = "";
         View 
         {
            MESSAGES 
            {
            }
            Settings_Summary = " 1-bit PIO using <br>
					
					 input pins with edge type NONE and interrupt source NONE
					";
         }
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
         Do_Test_Bench_Wiring = "0";
         Driven_Sim_Value = "0";
         has_tri = "0";
         has_out = "0";
         has_in = "1";
         capture = "0";
         Data_Width = "1";
         reset_value = "0";
         edge_type = "NONE";
         irq_type = "NONE";
         bit_clearing_edge_register = "0";
         bit_modifying_output_register = "0";
      }
      HDL_INFO 
      {
         Precompiled_Simulation_Library_Files = "";
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/chorus_on.v";
         Synthesis_Only_Files = "";
      }
   }
   MODULE clk
   {
      SLAVE s1
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT address
            {
               type = "address";
               width = "2";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT readdata
            {
               type = "readdata";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "1";
            Address_Width = "2";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY cpu_0/data_master
            {
               priority = "1";
               Offset_Address = "0x00011040";
            }
            Base_Address = "0x00011040";
            Has_IRQ = "0";
            Address_Group = "0";
            IRQ_MASTER cpu_0/data_master
            {
               IRQ_Number = "NC";
            }
            Is_Readable = "1";
            Is_Writable = "0";
         }
      }
      PORT_WIRING 
      {
         PORT in_port
         {
            type = "export";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT out_port
         {
            direction = "output";
            Is_Enabled = "0";
            width = "1";
         }
         PORT bidir_port
         {
            direction = "inout";
            Is_Enabled = "0";
            width = "1";
         }
      }
      class = "altera_avalon_pio";
      class_version = "7.080902";
      SYSTEM_BUILDER_INFO 
      {
         Is_Enabled = "1";
         Instantiate_In_System_Module = "1";
         Wire_Test_Bench_Values = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         Clock_Source = "cpu_clk";
         Has_Clock = "1";
         Date_Modified = "";
         View 
         {
            MESSAGES 
            {
            }
            Settings_Summary = " 1-bit PIO using <br>
					
					 input pins with edge type NONE and interrupt source NONE
					";
         }
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
         Do_Test_Bench_Wiring = "0";
         Driven_Sim_Value = "0";
         has_tri = "0";
         has_out = "0";
         has_in = "1";
         capture = "0";
         Data_Width = "1";
         reset_value = "0";
         edge_type = "NONE";
         irq_type = "NONE";
         bit_clearing_edge_register = "0";
         bit_modifying_output_register = "0";
      }
      HDL_INFO 
      {
         Precompiled_Simulation_Library_Files = "";
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/clk.v";
         Synthesis_Only_Files = "";
      }
   }
   MODULE adclrc
   {
      SLAVE s1
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT address
            {
               type = "address";
               width = "2";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT readdata
            {
               type = "readdata";
               width = "1";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "1";
            Address_Width = "2";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY cpu_0/data_master
            {
               priority = "1";
               Offset_Address = "0x00011050";
            }
            Base_Address = "0x00011050";
            Has_IRQ = "0";
            Address_Group = "0";
            IRQ_MASTER cpu_0/data_master
            {
               IRQ_Number = "NC";
            }
            Is_Readable = "1";
            Is_Writable = "0";
         }
      }
      PORT_WIRING 
      {
         PORT in_port
         {
            type = "export";
            width = "1";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT out_port
         {
            direction = "output";
            Is_Enabled = "0";
            width = "1";
         }
         PORT bidir_port
         {
            direction = "inout";
            Is_Enabled = "0";
            width = "1";
         }
      }
      class = "altera_avalon_pio";
      class_version = "7.080902";
      SYSTEM_BUILDER_INFO 
      {
         Is_Enabled = "1";
         Instantiate_In_System_Module = "1";
         Wire_Test_Bench_Values = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         Clock_Source = "cpu_clk";
         Has_Clock = "1";
         Date_Modified = "";
         View 
         {
            MESSAGES 
            {
            }
            Settings_Summary = " 1-bit PIO using <br>
					
					 input pins with edge type NONE and interrupt source NONE
					";
         }
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
         Do_Test_Bench_Wiring = "0";
         Driven_Sim_Value = "0";
         has_tri = "0";
         has_out = "0";
         has_in = "1";
         capture = "0";
         Data_Width = "1";
         reset_value = "0";
         edge_type = "NONE";
         irq_type = "NONE";
         bit_clearing_edge_register = "0";
         bit_modifying_output_register = "0";
      }
      HDL_INFO 
      {
         Precompiled_Simulation_Library_Files = "";
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/adclrc.v";
         Synthesis_Only_Files = "";
      }
   }
   MODULE datain
   {
      SLAVE s1
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT address
            {
               type = "address";
               width = "2";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT readdata
            {
               type = "readdata";
               width = "16";
               direction = "output";
               Is_Enabled = "1";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "16";
            Address_Width = "2";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY cpu_0/data_master
            {
               priority = "1";
               Offset_Address = "0x00011060";
            }
            Base_Address = "0x00011060";
            Has_IRQ = "0";
            Address_Group = "0";
            IRQ_MASTER cpu_0/data_master
            {
               IRQ_Number = "NC";
            }
            Is_Readable = "1";
            Is_Writable = "0";
         }
      }
      PORT_WIRING 
      {
         PORT in_port
         {
            type = "export";
            width = "16";
            direction = "input";
            Is_Enabled = "1";
         }
         PORT out_port
         {
            direction = "output";
            Is_Enabled = "0";
            width = "16";
         }
         PORT bidir_port
         {
            direction = "inout";
            Is_Enabled = "0";
            width = "16";
         }
      }
      class = "altera_avalon_pio";
      class_version = "7.080902";
      SYSTEM_BUILDER_INFO 
      {
         Is_Enabled = "1";
         Instantiate_In_System_Module = "1";
         Wire_Test_Bench_Values = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         Clock_Source = "cpu_clk";
         Has_Clock = "1";
         Date_Modified = "";
         View 
         {
            MESSAGES 
            {
            }
            Settings_Summary = " 16-bit PIO using <br>
					
					 input pins with edge type NONE and interrupt source NONE
					";
         }
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
         Do_Test_Bench_Wiring = "0";
         Driven_Sim_Value = "0";
         has_tri = "0";
         has_out = "0";
         has_in = "1";
         capture = "0";
         Data_Width = "16";
         reset_value = "0";
         edge_type = "NONE";
         irq_type = "NONE";
         bit_clearing_edge_register = "0";
         bit_modifying_output_register = "0";
      }
      HDL_INFO 
      {
         Precompiled_Simulation_Library_Files = "";
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/datain.v";
         Synthesis_Only_Files = "";
      }
   }
   MODULE dataout
   {
      SLAVE s1
      {
         PORT_WIRING 
         {
            PORT clk
            {
               type = "clk";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT reset_n
            {
               type = "reset_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT address
            {
               type = "address";
               width = "2";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT write_n
            {
               type = "write_n";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT writedata
            {
               type = "writedata";
               width = "16";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT chipselect
            {
               type = "chipselect";
               width = "1";
               direction = "input";
               Is_Enabled = "1";
            }
            PORT readdata
            {
               Is_Enabled = "1";
               direction = "output";
               type = "readdata";
               width = "16";
            }
         }
         SYSTEM_BUILDER_INFO 
         {
            Bus_Type = "avalon";
            Write_Wait_States = "0cycles";
            Read_Wait_States = "1cycles";
            Hold_Time = "0cycles";
            Setup_Time = "0cycles";
            Is_Printable_Device = "0";
            Address_Alignment = "native";
            Well_Behaved_Waitrequest = "0";
            Is_Nonvolatile_Storage = "0";
            Read_Latency = "0";
            Is_Memory_Device = "0";
            Maximum_Pending_Read_Transactions = "0";
            Minimum_Uninterrupted_Run_Length = "1";
            Accepts_Internal_Connections = "1";
            Write_Latency = "0";
            Is_Flash = "0";
            Data_Width = "16";
            Address_Width = "2";
            Maximum_Burst_Size = "1";
            Register_Incoming_Signals = "0";
            Register_Outgoing_Signals = "0";
            Interleave_Bursts = "0";
            Linewrap_Bursts = "0";
            Burst_On_Burst_Boundaries_Only = "0";
            Always_Burst_Max_Burst = "0";
            Is_Big_Endian = "0";
            Is_Enabled = "1";
            MASTERED_BY cpu_0/data_master
            {
               priority = "1";
               Offset_Address = "0x00011070";
            }
            Base_Address = "0x00011070";
            Has_IRQ = "0";
            Address_Group = "0";
            IRQ_MASTER cpu_0/data_master
            {
               IRQ_Number = "NC";
            }
            Is_Readable = "0";
            Is_Writable = "1";
         }
      }
      PORT_WIRING 
      {
         PORT out_port
         {
            type = "export";
            width = "16";
            direction = "output";
            Is_Enabled = "1";
         }
         PORT in_port
         {
            direction = "input";
            Is_Enabled = "0";
            width = "16";
         }
         PORT bidir_port
         {
            direction = "inout";
            Is_Enabled = "0";
            width = "16";
         }
      }
      class = "altera_avalon_pio";
      class_version = "7.080902";
      SYSTEM_BUILDER_INFO 
      {
         Is_Enabled = "1";
         Instantiate_In_System_Module = "1";
         Wire_Test_Bench_Values = "1";
         Top_Level_Ports_Are_Enumerated = "1";
         Clock_Source = "cpu_clk";
         Has_Clock = "1";
         Date_Modified = "";
         View 
         {
            MESSAGES 
            {
            }
            Settings_Summary = " 16-bit PIO using <br>
					
					
					 output pins";
         }
      }
      WIZARD_SCRIPT_ARGUMENTS 
      {
         Do_Test_Bench_Wiring = "0";
         Driven_Sim_Value = "0";
         has_tri = "0";
         has_out = "1";
         has_in = "0";
         capture = "0";
         Data_Width = "16";
         reset_value = "0";
         edge_type = "NONE";
         irq_type = "NONE";
         bit_clearing_edge_register = "0";
         bit_modifying_output_register = "0";
      }
      HDL_INFO 
      {
         Precompiled_Simulation_Library_Files = "";
         Simulation_HDL_Files = "";
         Synthesis_HDL_Files = "__PROJECT_DIRECTORY__/dataout.v";
         Synthesis_Only_Files = "";
      }
   }
}
